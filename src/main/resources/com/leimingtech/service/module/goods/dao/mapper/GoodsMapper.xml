<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.leimingtech.service.module.goods.dao.mapper.GoodsMapper">
    <resultMap id="BaseResultMap" type="com.leimingtech.core.entity.base.Goods">
        <result column="goods_id" property="goodsId" jdbcType="INTEGER"/>
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR"/>
        <result column="goods_subtitle" property="goodsSubtitle" jdbcType="VARCHAR"/>
        <result column="gc_id" property="gcId" jdbcType="INTEGER"/>
        <result column="gc_name" property="gcName" jdbcType="VARCHAR"/>
        <result column="brand_id" property="brandId" jdbcType="INTEGER"/>
        <result column="brand_name" property="brandName" jdbcType="VARCHAR"/>
        <result column="type_id" property="typeId" jdbcType="INTEGER"/>
        <result column="store_id" property="storeId" jdbcType="INTEGER"/>
        <result column="store_name" property="storeName" jdbcType="VARCHAR"/>
        <result column="spec_open" property="specOpen" jdbcType="INTEGER"/>
        <result column="spec_id" property="specId" jdbcType="INTEGER"/>
        <result column="spec_name" property="specName" jdbcType="VARCHAR"/>
        <result column="goods_image" property="goodsImage" jdbcType="VARCHAR"/>
        <result column="goods_image_more" property="goodsImageMore" jdbcType="VARCHAR"/>
        <result column="goods_store_price" property="goodsStorePrice" jdbcType="DECIMAL"/>
        <result column="goods_serial" property="goodsSerial" jdbcType="VARCHAR"/>
        <result column="goods_show" property="goodsShow" jdbcType="INTEGER"/>
        <result column="goods_click" property="goodsClick" jdbcType="INTEGER"/>
        <result column="goods_state" property="goodsState" jdbcType="INTEGER"/>
        <result column="goods_commend" property="goodsCommend" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="goods_keywords" property="goodsKeywords" jdbcType="VARCHAR"/>
        <result column="goods_description" property="goodsDescription" jdbcType="VARCHAR"/>
        <result column="goods_body" property="goodsBody" jdbcType="VARCHAR"/>
        <result column="goods_attr" property="goodsAttr" jdbcType="VARCHAR"/>
        <result column="goods_spec" property="goodsSpec" jdbcType="VARCHAR"/>
        <result column="goods_col_img" property="goodsColImg" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="BIGINT"/>
        <result column="start_time" property="startTime" jdbcType="BIGINT"/>
        <result column="end_time" property="endTime" jdbcType="BIGINT"/>
        <result column="goods_form" property="goodsForm" jdbcType="INTEGER"/>
        <result column="transport_id" property="transportId" jdbcType="INTEGER"/>
        <result column="py_price" property="pyPrice" jdbcType="DECIMAL"/>
        <result column="kd_price" property="kdPrice" jdbcType="DECIMAL"/>
        <result column="es_price" property="esPrice" jdbcType="DECIMAL"/>
        <result column="city_id" property="cityId" jdbcType="INTEGER"/>
        <result column="city_name" property="cityName" jdbcType="VARCHAR"/>
        <result column="province_id" property="provinceId" jdbcType="INTEGER"/>
        <result column="province_name" property="provinceName" jdbcType="VARCHAR"/>
        <result column="goods_close_reason" property="goodsCloseReason" jdbcType="VARCHAR"/>
        <result column="goods_store_state" property="goodsStoreState" jdbcType="INTEGER"/>
        <result column="commentnum" property="commentnum" jdbcType="INTEGER"/>
        <result column="salenum" property="salenum" jdbcType="INTEGER"/>
        <result column="goods_collect" property="goodsCollect" jdbcType="INTEGER"/>
        <result column="goods_transfee_charge" property="goodsTransfeeCharge" jdbcType="INTEGER"/>
        <result column="store_class_id" property="storeClassId" jdbcType="INTEGER"/>
        <result column="goods_market_price" property="goodsMarketPrice" jdbcType="DECIMAL"/>
        <result column="goods_cost_price" property="goodCostPrice" jdbcType="DECIMAL"/>
    </resultMap>
    
    <resultMap id="BaseResultMap2" extends="BaseResultMap" type="com.leimingtech.core.entity.base.Goods">
    	<result column="goodsTotalStorage" property="goodsTotalStorage" jdbcType="INTEGER"/>
    </resultMap>
    
    <resultMap id="BaseResultMap3" extends="BaseResultMap" type="com.leimingtech.core.entity.vo.GoodsTradeVo">
    <!-- 	<result column="goods_id" property="goodsId" jdbcType="INTEGER"/>
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR"/>
        <result column="gc_id" property="gcId" jdbcType="INTEGER"/>
        <result column="gc_name" property="gcName" jdbcType="VARCHAR"/>
        <result column="store_id" property="storeId" jdbcType="INTEGER"/>
        <result column="city_name" property="cityName" jdbcType="VARCHAR"/>
        <result column="store_name" property="storeName" jdbcType="VARCHAR"/>
        <result column="province_name" property="provinceName" jdbcType="VARCHAR"/> -->
        <result column="trade_goodscount" property="tradeGoodsCount" jdbcType="VARCHAR"/>
        <result column="trade_goodsprice" property="tradeGoodsPrice" jdbcType="VARCHAR"/>
    </resultMap>
    
    
     <resultMap id="BaseResultMap4" type="com.leimingtech.core.entity.GoodsExcel">
        <result column="goods_id" property="goodsId" jdbcType="INTEGER"/>
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR"/>
        <result column="gc_id" property="gcId" jdbcType="INTEGER"/>
        <result column="goods_form" property="goodsForm" jdbcType="INTEGER"/>
        <result column="goods_subtitle" property="goodsSubtitle" jdbcType="VARCHAR"/>
        <result column="goods_store_price" property="goodsStorePrice" jdbcType="DECIMAL"/>
       <!--  <result column="goodsTotalStorage" property="goodsTotalStorage" jdbcType="INTEGER"/> -->
        <result column="goods_serial" property="goodsSerial" jdbcType="VARCHAR"/>
        <result column="goods_commend" property="goodsCommend" jdbcType="INTEGER"/>
        <result column="goods_keywords" property="goodsKeywords" jdbcType="VARCHAR"/>
        <result column="goods_description" property="goodsDescription" jdbcType="VARCHAR"/>
        <result column="goods_show" property="goodsShow" jdbcType="INTEGER"/>
    </resultMap>
    
    <sql id="Base_Column_List">
    	goods_id,goods_name,goods_subtitle,gc_id,gc_name,brand_id,brand_name,type_id,
    	store_id,store_name,spec_open,spec_id,spec_name,goods_image,goods_image_more,
    	goods_store_price,goods_serial,goods_show,goods_click,goods_state,
    	goods_commend,create_time,goods_keywords,goods_description,goods_body,
    	goods_attr,goods_spec,goods_col_img,update_time,start_time,end_time,
    	goods_form,transport_id,py_price,kd_price,es_price,city_id,city_name,
    	province_id,province_name,goods_close_reason,goods_store_state,commentnum,
    	salenum,goods_collect,goods_transfee_charge,store_class_id,goods_market_price,
    	goods_cost_price
    </sql>
    
      <sql id="Base_Column_List2">
    	goods_id,goods_name,gc_id,goods_form,goods_subtitle,goods_store_price
    	,goods_serial,goods_commend,goods_keywords,goods_description,goods_show,
    	goods_market_price,goods_cost_price
    </sql>
	<!-- 分页where条件 -->
	<sql id="whereStatement">
		<where>
			1 = 1
			<if test="condition.goodsName != null and condition.goodsName != '' ">
				and goods_name like CONCAT('%',#{condition.goodsName},'%')
			</if>
			<if test="condition.brandId != null and condition.brandId != '' ">
				and brand_id = #{condition.brandId}
			</if>
			<if test="condition.storeId != null">
				and store_id = #{condition.storeId}
			</if>
			<if test="condition.goodsState != null">
				and goods_state = #{condition.goodsState}
			</if>
			<if test="condition.goodsShow != null">
				and goods_show = #{condition.goodsShow}
			</if>
			<if test="condition.goodsStoreState != null">
				and goods_store_state = #{condition.goodsStoreState}
			</if>
			<if test="condition.gcId != null">
				and gc_id = #{condition.gcId}
			</if>
			<if test="condition.storeClassId != null">
				and store_class_id = #{condition.storeClassId}
			</if>
			<if test="condition.typeId != null">
				and type_id = #{condition.typeId}
			</if>
			<if test="condition.cityId != null">
				and city_id = #{condition.cityId}
			</if>
			<if test="condition.provinceId != null">
				and province_id = #{condition.provinceId}
			</if>
			<if test="condition.goodsCommend != null">
				and goods_commend = #{condition.goodsCommend}
			</if>
			<if test="condition.goodsSerial != null and condition.goodsSerial != '' ">
				and goods_serial like CONCAT('%',#{condition.goodsSerial},'%')
			</if>
			<if test="condition.goodsSerial != null and condition.goodsSerial != '' ">
				and goods_serial like CONCAT('%',#{condition.goodsSerial},'%')
			</if>
			<if test="condition.storeName != null and condition.storeName != '' ">
				and store_name like CONCAT('%',#{condition.storeName},'%')
			</if>
			<if test="condition.goodids!=null and condition.goodids!='' and  condition.goodids!='[]'">
                and goods_id not in 
				<foreach item="item" index="index" collection="condition.goodids"   
                        open="(" separator="," close=")">
                       #{item}  
               </foreach>
            </if>
            <if test="condition.storeName != null">
				and store_name like CONCAT('%', #{condition.storeName}, '%')
			</if>
			and is_del = 0
		</where>
	</sql>
	
	<sql id="orderBy">
		<if test="condition.sortField == 'createTime'">
			order by sg.create_time ${condition.orderBy} desc
		</if>
		<if test="condition.sortField == 'goodsStorePrice'">
			order by sg.goods_store_price ${condition.orderBy} 
		</if>
		<if test="condition.sortField == 'salenum'">
			order by sg.salenum ${condition.orderBy}
		</if>
		<if test="condition.sortField == 'goodsCollect'">
			order by sg.goods_collect ${condition.orderBy}
		</if>
		<if test="condition.sortField == 'goodsClick'">
			order by sg.goods_click ${condition.orderBy}
		</if>
	</sql>
	
	<select id="findGoodPagerList" resultMap="BaseResultMap2" parameterType="com.leimingtech.service.utils.page.Pager">
		select a.* from(
			select
			sg.*,sgs.goodsTotalStorage
			from (
				(select * from shop_goods <include refid="whereStatement" />) sg 
				join 
				(select sum(spec_goods_storage) goodsTotalStorage,goods_id from shop_goods_spec group by goods_id) sgs
				on sg.goods_id=sgs.goods_id
				)
				<if test="condition.sortField != null">
					<if test="condition.orderBy != null">
						<include refid="orderBy"/>
					</if>
				</if>
		) a 
		<!-- limit #{start}, #{pageSize} -->
	</select>
	
     <!--* 通过一定条件的条件,查找某个商品,
	 * 这个方法只会返回一个商品,
	 * 使用方法:
	 * 新建一个goods对象,在这个对象中
	 * 一定要设置goodsid这个属性
	 * 可以选择set属性:storeId,goodsState
	 * 使用这个方法会根据你所设置的条件去查询,
	 * 如果没有返回null 
	 -->
    <select id="findOneGoodByCondition" resultMap="BaseResultMap" parameterType="com.leimingtech.core.entity.base.Goods">
        select
        <include refid="Base_Column_List" />
        from shop_goods
        WHERE goods_id = #{goodsId}
		<if test="storeId != null">
			and store_id = #{storeId}
		</if>
		<if test="goodsState != null">
			and goods_state = #{goodsState}
		</if>
		<if test="goodsShow != null">
			and goods_show = #{goodsShow}
		</if>
		<if test="goodsStoreState != null">
			and goods_store_state = #{goodsStoreState}
		</if>
		and is_del = 0
    </select>
        
    <select id="findGoodById" resultMap="BaseResultMap2" parameterType="int">
        select
        sg.*,sgs.goodsTotalStorage
        from  (
				shop_goods sg 
				join 
				(select sum(spec_goods_storage) goodsTotalStorage,goods_id from shop_goods_spec group by goods_id) sgs
				on sg.goods_id=sgs.goods_id
				)
        WHERE sg.goods_id = #{goodsId} and sg.is_del = 0
    </select>
    
    <insert id="saveGoods" parameterType="com.leimingtech.core.entity.base.Goods" useGeneratedKeys="true" keyProperty="goodsId">
    	insert into shop_goods
	    <trim prefix="(" suffix=")" suffixOverrides="," >
	      <if test="goodsName != null" >
	        goods_name,
	      </if>
	      <if test="goodsSubtitle != null" >
	        goods_subtitle,
	      </if>
	      <if test="gcId != null" >
	        gc_id,
	      </if>
	      <if test="gcName != null" >
	        gc_name,
	      </if>
	      <if test="brandId != null" >
	        brand_id,
	      </if>
	      <if test="brandName != null" >
	        brand_name,
	      </if>
	      <if test="typeId != null" >
	        type_id,
	      </if>
	      <if test="storeId != null" >
	        store_id,
	      </if>
	      <if test="storeName != null" >
	        store_name,
	      </if>
	      <if test="specOpen != null" >
	        spec_open,
	      </if>
	      <if test="specId != null" >
	        spec_id,
	      </if>
	      <if test="specName != null" >
	        spec_name,
	      </if>
	      <if test="goodsImage != null" >
	        goods_image,
	      </if>
	      <if test="goodsImageMore != null" >
	        goods_image_more,
	      </if>
	      <if test="goodsStorePrice != null" >
	        goods_store_price,
	      </if>
	      <if test="goodsSerial != null" >
	        goods_serial,
	      </if>
	      <if test="goodsShow != null" >
	        goods_show,
	      </if>
	      <if test="goodsClick != null" >
	        goods_click,
	      </if>
	      <if test="goodsState != null" >
	        goods_state,
	      </if>
	      <if test="goodsCommend != null" >
	        goods_commend,
	      </if>
	      <if test="createTime != null" >
	        create_time,
	      </if>
	      <if test="goodsKeywords != null" >
	        goods_keywords,
	      </if>
	      <if test="goodsDescription != null" >
	        goods_description,
	      </if>
	      <if test="goodsBody != null" >
	        goods_body,
	      </if>
	      <if test="goodsAttr != null" >
	        goods_attr,
	      </if>
	      <if test="goodsSpec != null" >
	        goods_spec,
	      </if>
	      <if test="goodsColImg != null" >
	        goods_col_img,
	      </if>
	      <if test="updateTime != null" >
	        update_time,
	      </if>
	      <if test="startTime != null" >
	        start_time,
	      </if>
	      <if test="endTime != null" >
	        end_time,
	      </if>
	      <if test="goodsForm != null" >
	        goods_form,
	      </if>
	      <if test="transportId != null" >
	        transport_id,
	      </if>
	      <if test="pyPrice != null" >
	        py_price,
	      </if>
	      <if test="kdPrice != null" >
	        kd_price,
	      </if>
	      <if test="esPrice != null" >
	        es_price,
	      </if>
	      <if test="cityId != null" >
	        city_id,
	      </if>
	      <if test="cityName != null" >
	        city_name,
	      </if>
	      <if test="provinceId != null" >
	        province_id,
	      </if>
	      <if test="provinceName != null" >
	        province_name,
	      </if>
	      <if test="goodsCloseReason != null" >
	        goods_close_reason,
	      </if>
	      <if test="goodsStoreState != null" >
	        goods_store_state,
	      </if>
	      <if test="commentnum != null" >
	        commentnum,
	      </if>
	      <if test="salenum != null" >
	        salenum,
	      </if>
	      <if test="goodsCollect != null" >
	        goods_collect,
	      </if>
	      <if test="goodsTransfeeCharge != null" >
	        goods_transfee_charge,
	      </if>
	      <if test="storeClassId != null" >
	        store_class_id,
	      </if>
	      <if test="goodsMarketPrice != null" >
	        goods_market_price,
	      </if>
	      <if test="goodCostPrice != null" >
	        goods_cost_price,
	      </if>
	    </trim>
	    <trim prefix="values (" suffix=")" suffixOverrides="," >
	      <if test="goodsName != null" >
	        #{goodsName},
	      </if>
	      <if test="goodsSubtitle != null" >
	        #{goodsSubtitle},
	      </if>
	      <if test="gcId != null" >
	        #{gcId},
	      </if>
	      <if test="gcName != null" >
	        #{gcName},
	      </if>
	      <if test="brandId != null" >
	        #{brandId},
	      </if>
	      <if test="brandName != null" >
	        #{brandName},
	      </if>
	      <if test="typeId != null" >
	        #{typeId},
	      </if>
	      <if test="storeId != null" >
	        #{storeId},
	      </if>
	      <if test="storeName != null" >
	        #{storeName},
	      </if>
	      <if test="specOpen != null" >
	        #{specOpen},
	      </if>
	      <if test="specId != null" >
	        #{specId},
	      </if>
	      <if test="specName != null" >
	        #{specName},
	      </if>
	      <if test="goodsImage != null" >
	        #{goodsImage},
	      </if>
	      <if test="goodsImageMore != null" >
	        #{goodsImageMore},
	      </if>
	      <if test="goodsStorePrice != null" >
	        #{goodsStorePrice},
	      </if>
	      <if test="goodsSerial != null" >
	        #{goodsSerial},
	      </if>
	      <if test="goodsShow != null" >
	        #{goodsShow},
	      </if>
	      <if test="goodsClick != null" >
	        #{goodsClick},
	      </if>
	      <if test="goodsState != null" >
	        #{goodsState},
	      </if>
	      <if test="goodsCommend != null" >
	        #{goodsCommend},
	      </if>
	      <if test="createTime != null" >
	        #{createTime},
	      </if>
	      <if test="goodsKeywords != null" >
	        #{goodsKeywords},
	      </if>
	      <if test="goodsDescription != null" >
	        #{goodsDescription},
	      </if>
	      <if test="goodsBody != null" >
	        #{goodsBody},
	      </if>
	      <if test="goodsAttr != null" >
	        #{goodsAttr},
	      </if>
	      <if test="goodsSpec != null" >
	        #{goodsSpec},
	      </if>
	      <if test="goodsColImg != null" >
	        #{goodsColImg},
	      </if>
   	      <if test="updateTime != null" >
	        #{updateTime},
	      </if>
	      <if test="startTime != null" >
	        #{startTime},
	      </if>
	      <if test="endTime != null" >
	        #{endTime},
	      </if>
	      <if test="goodsForm != null" >
	        #{goodsForm},
	      </if>
	      <if test="transportId != null" >
	        #{transportId},
	      </if>
	      <if test="pyPrice != null" >
	        #{pyPrice},
	      </if>
	      <if test="kdPrice != null" >
	        #{kdPrice},
	      </if>
	      <if test="esPrice != null" >
	        #{esPrice},
	      </if>
	      <if test="cityId != null" >
	        #{cityId},
	      </if>
	      <if test="cityName != null" >
	        #{cityName},
	      </if>
	      <if test="provinceId != null" >
	        #{provinceId},
	      </if>
	      <if test="provinceName != null" >
	        #{provinceName},
	      </if>
	      <if test="goodsCloseReason != null" >
	        #{goodsCloseReason},
	      </if>
	      <if test="goodsStoreState != null" >
	        #{goodsStoreState},
	      </if>
	      <if test="commentnum != null" >
	        #{commentnum},
	      </if>
	      <if test="salenum != null" >
	        #{salenum},
	      </if>
	      <if test="goodsCollect != null" >
	        #{goodsCollect},
	      </if>
	      <if test="goodsTransfeeCharge != null" >
	        #{goodsTransfeeCharge},
	      </if>
	      <if test="storeClassId != null" >
	        #{storeClassId},
	      </if>
	      
	      <if test="goodsMarketPrice != null" >
	        #{goodsMarketPrice},
	      </if>
	      <if test="goodCostPrice != null" >
	        #{goodCostPrice},
	      </if>
	      
	      
	    </trim>
  </insert>
  
  	<update id="updateGoods" parameterType="com.leimingtech.core.entity.base.Goods" >
    	update shop_goods
	    <set>
	      <if test="goodsName != null" >
	        goods_name=#{goodsName},
	      </if>
	      <if test="goodsSubtitle != null" >
	        goods_subtitle=#{goodsSubtitle},
	      </if>
	      <if test="gcId != null" >
	        gc_id=#{gcId},
	      </if>
	      <if test="gcName != null" >
	        gc_name=#{gcName},
	      </if>
	      <if test="brandId != null" >
	        brand_id=#{brandId},
	      </if>
	      <if test="brandName != null" >
	        brand_name=#{brandName},
	      </if>
	      <if test="typeId != null" >
	        type_id=#{typeId},
	      </if>
	      <if test="storeId != null" >
	        store_id=#{storeId},
	      </if>
	      <if test="storeName != null" >
	        store_name=#{storeName},
	      </if>
	      <if test="specOpen != null" >
	        spec_open=#{specOpen},
	      </if>
	      <if test="specId != null" >
	        spec_id=#{specId},
	      </if>
	      <if test="specName != null" >
	        spec_name=#{specName},
	      </if>
	      <if test="goodsImage != null" >
	        goods_image=#{goodsImage},
	      </if>
	      <if test="goodsImageMore != null" >
	        goods_image_more=#{goodsImageMore},
	      </if>
	      <if test="goodsStorePrice != null" >
	        goods_store_price=#{goodsStorePrice},
	      </if>
	      <if test="goodsSerial != null" >
	        goods_serial=#{goodsSerial},
	      </if>
	      <if test="goodsShow != null" >
	        goods_show=#{goodsShow},
	      </if>
	      <if test="goodsClick != null" >
	        goods_click=#{goodsClick},
	      </if>
	      <if test="goodsState != null" >
	        goods_state=#{goodsState},
	      </if>
	      <if test="goodsCommend != null" >
	        goods_commend=#{goodsCommend},
	      </if>
	      <if test="createTime != null" >
	        create_time=#{createTime},
	      </if>
	      <if test="goodsKeywords != null" >
	        goods_keywords=#{goodsKeywords},
	      </if>
	      <if test="goodsDescription != null" >
	        goods_description=#{goodsDescription},
	      </if>
	      <if test="goodsBody != null" >
	        goods_body=#{goodsBody},
	      </if>
	      <if test="goodsAttr != null" >
	        goods_attr=#{goodsAttr},
	      </if>
	      <if test="goodsSpec != null" >
	        goods_spec=#{goodsSpec},
	      </if>
	      <if test="goodsColImg != null" >
	        goods_col_img=#{goodsColImg},
	      </if>
   	      <if test="updateTime != null" >
	        update_time=#{updateTime},
	      </if>
	      <if test="startTime != null" >
	        start_time=#{startTime},
	      </if>
	      <if test="endTime != null" >
	        end_time=#{endTime},
	      </if>
	      <if test="goodsForm != null" >
	        goods_form=#{goodsForm},
	      </if>
	      <if test="transportId != null" >
	        transport_id=#{transportId},
	      </if>
	      <if test="pyPrice != null" >
	        py_price=#{pyPrice},
	      </if>
	      <if test="kdPrice != null" >
	        kd_price=#{kdPrice},
	      </if>
	      <if test="esPrice != null" >
	        es_price=#{esPrice},
	      </if>
	      <if test="cityId != null" >
	        city_id=#{cityId},
	      </if>
	      <if test="cityName != null" >
	        city_name=#{cityName},
	      </if>
	      <if test="provinceId != null" >
	        province_id=#{provinceId},
	      </if>
	      <if test="provinceName != null" >
	        province_name=#{provinceName},
	      </if>
	      <if test="goodsCloseReason != null" >
	        goods_close_reason=#{goodsCloseReason},
	      </if>
	      <if test="goodsStoreState != null" >
	        goods_store_state=#{goodsStoreState},
	      </if>
	      <if test="commentnum != null" >
	        commentnum = commentnum + #{commentnum},
	      </if>
	      <if test="salenum != null" >
	        salenum = salenum + #{salenum},
	      </if>
	      <if test="goodsCollect != null" >
	        goods_collect = goods_collect + #{goodsCollect},
	      </if>
	      <if test="goodsTransfeeCharge != null" >
	        goods_transfee_charge=#{goodsTransfeeCharge},
	      </if>
	      <if test="storeClassId != null" >
	        store_class_id=#{storeClassId},
	      </if>
	      <if test="goodsMarketPrice != null" >
	        goods_market_price=#{goodsMarketPrice},
	      </if>
	      <if test="goodCostPrice != null" >
	        goods_cost_price=#{goodCostPrice}
	      </if>
	    </set>
    	where goods_id = #{goodsId}
  </update>
  
     <update id="deleteGoods" parameterType="java.lang.Integer">
    	update shop_goods set is_del = 1 where goods_id = #{goodsId,jdbcType=INTEGER} 
    </update>
    <!--  查询总条数  -->
    <select id="countGoods" resultType="Integer" parameterType="com.leimingtech.core.entity.base.Goods">
        select count(1) from shop_goods
        <include refid="whereStatement2" />
    </select>
    
   <!--  查询总条数where条件 -->
    <sql id="whereStatement2">
		<where>
			1 = 1
			<if test="goodsName != null and goodsName != '' ">
				and goods_name like CONCAT('%',#{goodsName},'%')
			</if>
			<if test="storeId != null">
				and store_id = #{storeId}
			</if>
			<if test="goodsState != null">
				and goods_state = #{goodsState}
			</if>
			<if test="goodsShow != null">
				and goods_show = #{goodsShow}
			</if>
			<if test="goodsStoreState != null">
				and goods_store_state = #{goodsStoreState}
			</if>
			<if test="gcId != null">
				and gc_id = #{gcId}
			</if>
			<if test="storeClassId != null">
				and store_class_id = #{storeClassId}
			</if>
			<if test="typeId != null">
				and type_id = #{typeId}
			</if>
			<if test="cityId != null">
				and city_id = #{cityId}
			</if>
			<if test="provinceId != null">
				and province_id = #{provinceId}
			</if>
			<if test="goodsCommend != null">
				and goods_commend = #{goodsCommend}
			</if>
			<if test="goodsSerial != null and goodsSerial != '' ">
				and goods_serial like CONCAT('%',#{goodsSerial},'%')
			</if>
			<if test="goodsSerial != null and goodsSerial != '' ">
				and goods_serial like CONCAT('%',#{goodsSerial},'%')
			</if>
			<!-- 本周新增 -->
			<if test="startTime != null" >
		        and create_time &gt;=#{startTime} and create_time &lt;= #{createTime}
		    </if>
			<if test="goodids!=null and goodids!='' and  goodids!='[]'">
                and goods_id not in 
				<foreach item="item" index="index" collection="goodids"   
                        open="(" separator="," close=")">
                       #{item}  
               </foreach>
            </if>
			and is_del = 0
		</where>
	</sql>
   
   
   <sql id="orderByTrade">
		<if test="condition.tradeGoodsCount == 'tradeGoodsCount'">
			order by trade_goodscount ${condition.orderBy}
		</if>
		<if test="condition.tradeGoodsPrice == 'tradeGoodsPrice'">
			order by trade_goodsprice ${condition.orderBy}
		</if>
	</sql>
   
   <!--  查询总条数where条件 -->
   <sql id="whereStatement3">
		<where>
			1 = 1 and sg.salenum &gt; 0
			<if test="condition.storeId != null">
				and sg.store_id = #{condition.storeId}
			</if>
			<if test="condition.goodsState != null">
				and sg.goods_state = #{condition.goodsState}
			</if>
			<if test="condition.gcId != null">
				and sg.gc_id = #{condition.gcId}
			</if>
			<if test="condition.storeClassId != null">
				and sg.store_class_id = #{condition.storeClassId}
			</if>
			<if test="condition.typeId != null">
				and sg.type_id = #{condition.typeId}
			</if>
		</where>
	</sql>
	
	<sql id="whereStatementcount3">
		<where>
			1 = 1 and salenum &gt; 0
			<if test="storeId != null">
				and store_id = #{storeId}
			</if>
			<if test="goodsState != null">
				and goods_state = #{goodsState}
			</if>
			<if test="gcId != null">
				and gc_id = #{gcId}
			</if>
			<if test="storeClassId != null">
				and store_class_id = #{storeClassId}
			</if>
			<if test="typeId != null">
				and type_id = #{typeId}
			</if>
		</where>
	</sql>
   
   <select id="findTradeGoodPagerList" resultMap="BaseResultMap3" parameterType="com.leimingtech.service.utils.page.Pager">
		select sg.goods_id,sg.goods_name,sg.gc_name,sg.store_id,sg.province_name,sg.city_name,sg.store_name,(select count(1) from shop_order_goods sord where sord.goods_id=sg.goods_id) as  trade_goodscount,
           (select sum(sod.goods_price) from shop_order_goods sod where sod.goods_id=sg.goods_id) as trade_goodsprice
           from shop_goods sg
           <include refid="whereStatement3" />
           <if test="condition.orderBy != null">
				<include refid="orderByTrade"/>
		   </if>
	</select>
	
	<select id="findTradeGoodcount" resultType="int" parameterType="com.leimingtech.core.entity.vo.GoodsTradeVo">
		select  count(1) from shop_goods
           <include refid="whereStatementcount3" />
	</select>
	
	
	<!--通过店铺id查找对应的商品-->
   <select id="findGoodListbystoreid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		 select goods_id from shop_goods where store_id = #{storeId}
	</select>
	<!--获取商品点击数据-->
	<select id="countGoodsClick" resultType="java.util.HashMap" parameterType="java.lang.Integer">
			select * from  ((SELECT goods_name goods_name,goods_click goods_click,0 as order_flag
			FROM shop_goods where store_id=#{storeId}  order by goods_click desc limit 10)
			) a order by order_flag,goods_click desc
	</select>
	
	<!--通过店铺id-->
   <select id="findGoodListbystoreid2" resultMap="BaseResultMap4" parameterType="java.lang.Integer">
		 select 
		    <include refid="Base_Column_List2"/> 
            from shop_goods where store_id = #{storeId}
	</select>
	
	<!--通过分类id查找对应的商品-->
   <select id="findGoodListByGcId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		 select * from shop_goods
		 where gc_id = #{gcId}
		 and is_del = 0
	</select>
</mapper>